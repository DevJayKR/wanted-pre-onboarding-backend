var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.086,1,2.053]],["body/modules/AppModule.html",[0,1.664,1,4.042,2,1.368,3,1.494,4,1.807,5,1.807,6,1.494,7,2.828,8,1.807,9,2.602,10,2.602,11,2.602,12,2.986,13,0.032,14,3.293,15,3.293,16,2.986,17,3.293,18,2.478,19,1.807,20,1.807,21,0.3,22,0.3,23,0.26,24,3.117,25,2.478,26,0.571,27,0.901,28,3.117,29,2.602,30,2.263,31,3.103,32,3.117,33,3.117,34,3.117,35,3.117,36,3.117,37,3.117,38,3.117,39,2.755,40,3.117,41,0.3,42,0.069,43,0.021,44,0.021]],["title/injectables/AppService.html",[17,1.846,45,1.283]],["body/injectables/AppService.html",[13,0.033,17,1.652,21,0.174,22,0.174,23,0.15,26,0.448,27,0.521,41,0.174,42,0.04,43,0.014,44,0.014,45,1.148,46,1.045,47,1.505,48,0.307,49,0.895,50,2.998,51,4.017,52,1.056,53,3.561,54,4.017,55,4.017,56,4.652,57,4.017,58,1.837,59,1.803,60,2.23,61,2.138,62,2.138,63,1.043,64,2.851,65,0.791,66,1.296,67,0.307,68,0.726,69,1.803,70,1.488,71,1.803,72,1.803,73,1.803,74,1.505,75,1.505,76,1.652,77,2.851,78,2.851,79,1.803,80,1.803,81,1.803,82,1.694,83,1.803,84,1.162,85,1.694,86,1.803,87,1.162,88,1.803,89,2.049,90,3.7,91,1.803,92,1.803,93,1.803,94,1.803,95,3.149,96,2.38,97,1.505,98,0.726,99,2.851,100,1.803,101,2.851,102,1.837,103,1.837,104,1.803,105,2.069,106,1.803,107,1.803,108,2.589,109,1.803,110,2.329,111,1.837,112,1.803,113,2.329,114,1.803,115,2.329,116,1.837,117,1.056,118,2.38,119,2.38,120,2.38,121,2.38,122,1.652,123,2.38,124,1.803,125,1.803,126,1.803,127,1.803,128,1.803,129,1.803,130,1.803,131,2.38,132,1.505,133,0.726,134,2.851,135,2.851,136,2.851,137,1.803,138,0.668,139,1.505,140,1.803,141,1.803,142,1.803,143,1.803]],["title/classes/ApplicationEmploymentDto.html",[42,0.07,144,1.846]],["body/classes/ApplicationEmploymentDto.html",[13,0.032,21,0.348,22,0.348,23,0.301,26,0.348,41,0.348,42,0.104,43,0.023,44,0.023,48,0.615,49,1.482,52,1.748,63,1.178,67,0.803,70,1.338,116,3.591,117,1.338,144,2.734,145,1.338,146,4.65,147,2.093,148,5.254,149,5.254,150,1.449,151,1.482,152,4.717,153,3.014,154,3.014,155,3.611,156,3.938,157,3.938,158,3.045,159,3.814,160,1.898,161,3.611,162,3.611]],["title/classes/BaseEntity.html",[42,0.07,163,1.674]],["body/classes/BaseEntity.html",[13,0.032,21,0.316,22,0.316,23,0.274,26,0.427,41,0.316,42,0.098,43,0.022,44,0.022,48,0.559,49,1.391,63,1.203,66,1.49,67,0.913,138,1.857,145,1.217,150,1.083,151,1.685,163,2.328,164,2.742,165,4.184,166,5.012,167,4.184,168,5.771,169,3.284,170,3.284,171,5.012,172,3.284,173,3.284,174,4.429,175,3.284,176,4.429,177,3.284,178,3.284,179,3.284,180,5.012,181,3.284,182,4.429,183,4.184,184,2.384,185,4.429,186,4.429,187,3.284,188,4.429,189,1.323,190,3.284]],["title/entities/Company.html",[98,1.283,191,1.527]],["body/entities/Company.html",[13,0.032,21,0.325,22,0.325,23,0.282,26,0.49,41,0.325,42,0.074,43,0.022,44,0.022,48,0.574,49,1.417,63,1.216,66,1.443,67,0.923,96,2.817,98,1.817,102,3.275,103,3.275,150,1.422,151,1.703,163,2.371,189,1.36,191,2.162,192,1.956,193,2.817,194,3.688,195,2.552,196,3.375,197,4.511,198,3.375,199,4.311,200,3.375,201,3.375,202,3.375,203,2.45,204,2.817,205,4.511,206,1.774]],["title/controllers/CompanyController.html",[207,1.527,208,2.053]],["body/controllers/CompanyController.html",[13,0.032,21,0.284,22,0.284,23,0.246,26,0.456,27,0.853,41,0.284,42,0.065,43,0.02,44,0.02,48,0.502,52,1.524,62,2.079,63,1.149,65,2.079,66,1.26,67,0.806,68,1.908,70,1.899,89,1.709,97,2.461,98,1.188,105,2.14,117,1.899,138,1.997,150,1.365,151,1.61,207,1.413,208,2.651,209,1.413,210,2.461,211,2.14,212,1.657,213,2.694,214,2.162,215,2.162,216,1.55,217,2.694,218,3.439,219,2.948,220,2.162,221,2.948,222,2.14,223,2.986,224,2.948,225,2.14,226,3.434,227,2.948,228,2.14,229,2.14,230,2.14,231,3.439,232,2.461,233,1.55,234,2.14,235,2.948,236,2.14,237,2.14,238,2.948,239,2.14,240,2.461,241,2.948]],["title/modules/CompanyModule.html",[0,1.086,12,1.674]],["body/modules/CompanyModule.html",[0,1.789,2,1.579,3,1.725,4,2.086,5,2.086,6,1.725,7,3.04,8,3.04,12,3.171,13,0.032,18,2.728,19,2.086,20,2.086,21,0.347,22,0.347,23,0.3,25,2.086,26,0.556,27,1.04,41,0.347,42,0.079,43,0.023,44,0.023,62,2.778,98,1.449,208,3.38,209,2.256,232,3.003,242,3.003,243,3.003,244,3.003,245,3.598,246,3.598,247,2.319,248,1.579,249,3.003,250,3.598]],["title/injectables/CompanyService.html",[45,1.283,62,1.398]],["body/injectables/CompanyService.html",[13,0.032,21,0.22,22,0.22,23,0.19,26,0.469,27,0.66,41,0.22,42,0.05,43,0.017,44,0.017,45,1.377,46,1.323,48,0.388,50,1.471,52,1.266,53,3.872,58,2.203,62,1.5,63,1.147,65,2.138,66,1.36,67,0.829,68,1.962,70,1.805,76,2.375,90,3.417,95,2.637,98,2.06,117,1.685,138,1.266,150,1.25,189,0.919,212,1.377,213,2.391,214,1.796,215,1.796,216,1.796,217,2.391,220,1.2,225,2.481,233,1.2,234,1.657,248,1.001,249,1.905,251,1.905,252,3.417,253,2.282,254,3.302,255,2.282,256,3.417,257,2.282,258,3.302,259,2.282,260,2.481,261,3.848,262,2.282,263,2.974,264,3.417,265,4.097,266,2.282,267,1.905,268,2.282,269,2.974,270,2.282,271,1.657,272,2.282,273,2.282,274,2.282,275,3.417,276,2.282,277,2.282,278,3.417,279,2.282,280,2.974,281,2.282,282,2.282,283,2.282,284,1.905,285,2.282]],["title/classes/CreateCompanyDto.html",[42,0.07,217,1.674]],["body/classes/CreateCompanyDto.html",[13,0.031,21,0.363,22,0.363,23,0.314,26,0.363,41,0.363,42,0.107,43,0.024,44,0.024,48,0.641,49,1.522,63,1.202,66,1.426,67,0.912,102,3.454,103,3.454,145,1.394,150,1.465,151,1.683,158,3.28,160,1.978,217,2.547,286,4.724,287,2.732,288,3.89,289,3.764,290,3.764,291,3.764,292,4.108]],["title/classes/CreateEmploymentDto.html",[42,0.07,82,1.527]],["body/classes/CreateEmploymentDto.html",[13,0.032,21,0.285,22,0.285,23,0.247,26,0.285,41,0.285,42,0.091,43,0.02,44,0.02,48,0.503,49,1.295,52,1.527,63,1.253,67,0.919,70,1.096,82,1.976,108,3.479,110,3.129,111,3.058,113,3.129,115,3.129,116,3.308,117,1.096,118,2.468,119,2.468,120,2.468,121,2.468,122,2.389,123,2.468,145,1.096,147,1.714,150,1.5,151,1.695,153,2.468,154,2.468,158,3.129,159,2.992,160,1.554,288,3.444,292,4.057,293,4.788,294,2.957,295,2.957,296,3.444,297,2.957,298,2.468,299,2.957,300,2.468,301,3.441]],["title/classes/CreateUserDto.html",[42,0.07,85,1.527]],["body/classes/CreateUserDto.html",[13,0.031,21,0.41,22,0.41,23,0.355,26,0.41,41,0.41,42,0.115,43,0.026,44,0.026,48,0.724,49,1.644,63,0.954,66,1.508,67,0.724,85,2.509,145,1.576,150,1.28,151,1.336,158,3.034,160,2.236,288,3.088,292,3.799,302,4.369,303,3.088,304,4.254]],["title/modules/DatabaseModule.html",[0,1.086,14,1.846]],["body/modules/DatabaseModule.html",[0,1.669,2,1.677,13,0.032,14,2.837,21,0.368,22,0.368,23,0.319,25,2.837,26,0.52,27,1.105,29,4.085,30,2.775,39,3.155,41,0.368,42,0.084,43,0.024,44,0.024,67,0.651,192,2.216,247,2.464,248,1.677,305,3.823,306,5.692,307,3.823,308,3.823,309,3.823,310,3.823,311,3.823,312,3.823,313,3.823,314,3.823,315,3.823,316,3.823,317,3.823,318,3.823,319,3.191,320,3.823,321,3.823,322,3.823,323,3.823,324,3.823]],["title/entities/Employment.html",[191,1.527,195,1.398]],["body/entities/Employment.html",[13,0.032,21,0.253,22,0.253,23,0.219,26,0.497,39,1.692,41,0.253,42,0.083,43,0.019,44,0.019,48,0.447,49,1.189,63,1.205,66,1.372,67,0.915,98,2.328,108,2.441,110,2.576,111,2.864,113,2.576,115,2.576,122,2.576,133,2.165,150,1.314,151,1.688,163,1.991,183,3.161,184,1.905,189,1.057,191,1.815,192,1.521,194,1.905,195,1.662,199,4.117,203,1.905,206,1.379,230,1.905,296,2.749,325,2.191,326,3.709,327,2.191,328,3.787,329,4.865,330,2.624,331,3.787,332,2.624,333,2.624,334,3.787,335,3.787,336,3.787,337,2.624,338,2.624,339,2.624,340,2.624,341,2.624,342,2.624,343,2.624,344,2.624,345,2.624,346,2.624,347,3.787,348,3.787,349,3.161,350,3.787]],["title/controllers/EmploymentController.html",[207,1.527,351,2.053]],["body/controllers/EmploymentController.html",[13,0.032,21,0.201,22,0.201,23,0.174,26,0.476,27,0.602,41,0.201,42,0.046,43,0.016,44,0.016,48,0.355,52,1.182,60,1.857,63,1.189,65,2.255,66,1.367,67,0.875,68,2.07,70,1.964,82,2.081,84,2.799,89,1.208,117,1.964,138,2.054,144,2.517,150,1.399,151,1.665,195,0.914,207,0.999,209,0.999,211,1.512,212,1.285,213,2.282,214,1.676,215,1.676,216,1.095,218,2.813,220,2.914,222,1.512,223,2.315,225,1.512,226,2.662,228,2.315,229,1.512,230,1.512,231,3.398,233,1.095,236,1.512,237,1.512,239,1.512,240,1.739,351,2.056,352,1.739,353,2.662,354,2.662,355,3.189,356,3.235,357,1.739,358,3.189,359,2.083,360,2.083,361,2.083,362,1.739,363,3.189,364,2.083,365,2.083,366,2.083,367,2.083,368,2.517,369,3.189,370,2.083,371,1.739,372,2.517,373,3.189,374,2.083,375,2.083,376,1.739,377,1.739,378,1.739,379,1.739,380,1.739,381,2.083,382,2.083,383,2.083,384,2.083,385,2.083,386,2.083,387,2.083,388,2.083,389,2.083,390,2.083,391,2.083,392,2.083,393,2.083]],["title/modules/EmploymentModule.html",[0,1.086,15,1.846]],["body/modules/EmploymentModule.html",[0,1.703,2,1.432,3,1.564,4,1.891,5,1.891,6,1.564,7,2.895,8,2.895,12,3.027,13,0.032,15,3.588,16,3.027,18,2.556,19,1.891,20,1.891,21,0.314,22,0.314,23,0.272,25,2.556,26,0.567,27,0.943,41,0.314,42,0.072,43,0.022,44,0.022,60,2.989,195,1.432,209,2.114,247,2.103,248,1.432,351,3.22,377,2.723,394,2.723,395,3.262,396,2.723,397,2.723,398,3.262,399,3.262,400,2.723,401,3.262,402,3.262,403,3.262]],["title/injectables/EmploymentService.html",[45,1.283,60,1.527]],["body/injectables/EmploymentService.html",[13,0.033,21,0.117,22,0.117,23,0.101,26,0.449,27,0.351,39,3.832,41,0.117,42,0.027,43,0.01,44,0.01,45,0.83,46,0.703,48,0.207,50,1.729,52,0.763,53,3.678,58,1.328,60,0.987,61,1.8,62,1.8,63,1.009,65,1.894,66,1.275,67,0.735,68,1.739,70,1.599,76,1.833,82,1.515,84,2.038,89,1.194,90,3.237,95,2.779,98,1.812,102,1.729,103,1.729,105,0.881,110,2.052,113,2.052,115,1.833,117,1.599,122,2.052,133,0.489,138,1.928,139,1.013,144,1.833,150,0.941,156,1.719,157,1.719,165,2.24,167,1.013,189,0.489,194,2.57,195,2.043,212,0.83,213,1.662,214,1.083,215,1.083,216,1.083,220,2.023,233,0.638,248,0.533,254,2.295,258,3.133,260,1.495,261,2.978,263,1.495,269,2.295,271,0.881,280,2.295,284,1.013,326,1.719,353,1.719,354,1.719,356,1.719,357,1.719,362,1.719,368,1.833,371,1.719,372,1.833,376,1.013,378,1.013,379,1.013,380,1.013,400,1.013,404,1.013,405,2.06,406,1.214,407,1.214,408,2.06,409,1.214,410,1.214,411,1.214,412,1.214,413,1.214,414,1.719,415,1.214,416,2.06,417,1.214,418,1.214,419,2.06,420,1.214,421,1.214,422,1.214,423,1.214,424,1.214,425,2.06,426,1.214,427,2.683,428,1.214,429,2.06,430,2.683,431,3.54,432,2.06,433,2.06,434,2.683,435,2.06,436,2.06,437,1.214,438,1.214,439,1.214,440,1.214,441,1.013,442,1.214,443,1.214,444,1.214,445,1.214,446,1.214,447,1.214,448,1.214,449,1.214,450,3.54,451,1.214,452,1.214,453,1.214,454,1.214,455,2.06,456,1.214,457,1.214,458,1.214,459,1.013,460,1.013,461,1.214,462,1.719,463,1.214,464,2.06,465,1.214]],["title/classes/SearchEmploymentDto.html",[42,0.07,368,1.846]],["body/classes/SearchEmploymentDto.html",[13,0.032,21,0.27,22,0.27,23,0.234,26,0.383,41,0.27,42,0.087,43,0.02,44,0.02,48,0.477,49,1.247,52,1.471,63,1.232,67,0.901,68,2.325,70,1.039,110,3.068,111,2.972,113,3.068,115,3.068,116,3.232,117,1.039,122,2.302,138,1.961,145,1.039,147,1.626,150,1.486,151,1.662,158,3.068,159,2.883,160,1.474,296,3.347,298,2.341,300,2.341,301,3.315,368,2.302,466,4.717,467,2.805,468,2.805,469,4.611,470,2.805,471,2.805,472,2.805,473,2.805,474,5.496,475,3.989,476,2.805,477,2.805,478,2.805,479,2.805,480,2.805,481,2.805]],["title/classes/UpdateCompanyDto.html",[42,0.07,482,2.312]],["body/classes/UpdateCompanyDto.html",[13,0.031,21,0.432,22,0.432,23,0.374,26,0.521,41,0.432,42,0.099,43,0.027,44,0.027,145,1.663,206,2.359,212,1.808,217,2.359,234,3.258,287,3.258,482,3.925,483,3.746,484,3.746,485,2.893,486,2.893,487,4.488]],["title/classes/UpdateEmploymentDto.html",[42,0.07,372,1.846]],["body/classes/UpdateEmploymentDto.html",[13,0.032,21,0.425,22,0.425,23,0.368,26,0.515,41,0.425,42,0.097,43,0.026,44,0.026,82,2.113,84,2.841,95,2.555,108,2.841,145,1.633,147,2.555,206,2.317,212,1.775,372,3.1,485,2.841,486,2.841,488,3.679,489,4.407,490,4.407]],["title/classes/UpdateUserDto.html",[42,0.07,491,2.312]],["body/classes/UpdateUserDto.html",[13,0.031,21,0.432,22,0.432,23,0.374,26,0.521,41,0.432,42,0.099,43,0.027,44,0.027,85,2.151,87,2.893,145,1.663,206,2.359,212,1.808,303,3.258,484,3.746,485,2.893,486,2.893,491,3.925,492,3.746,493,4.488]],["title/entities/User.html",[133,1.283,191,1.527]],["body/entities/User.html",[13,0.032,21,0.357,22,0.357,23,0.309,26,0.513,41,0.357,42,0.082,43,0.024,44,0.024,48,0.631,49,1.507,63,1.076,66,1.497,67,0.817,131,3.094,133,1.933,150,1.173,151,1.507,163,2.522,189,1.493,191,2.3,192,2.149,195,2.62,199,3.862,203,2.691,204,3.094,206,1.948,327,3.094,349,4.005,462,4.005,494,3.094,495,5.32,496,3.707,497,3.707]],["title/controllers/UserController.html",[207,1.527,498,2.053]],["body/controllers/UserController.html",[13,0.032,21,0.31,22,0.31,23,0.269,26,0.478,27,0.931,41,0.31,42,0.071,43,0.022,44,0.022,48,0.548,52,1.619,61,2.177,63,1.113,65,1.918,66,1.163,67,0.744,68,1.761,70,1.838,85,2.55,87,2.075,89,1.866,117,1.838,132,2.688,133,1.297,138,1.838,150,1.213,151,1.558,207,1.543,209,1.543,211,2.337,212,1.761,213,2.797,214,2.297,216,1.692,218,3.601,220,2.297,222,2.337,223,3.172,228,2.337,229,2.337,231,3.172,233,1.692,236,2.337,237,2.337,239,2.337,460,2.688,498,2.817,499,2.688,500,3.22,501,3.22,502,3.22,503,2.688,504,3.22,505,3.22]],["title/modules/UserModule.html",[0,1.086,16,1.674]],["body/modules/UserModule.html",[0,1.789,2,1.579,3,1.725,4,2.086,5,2.086,6,1.725,7,3.04,8,3.04,13,0.032,16,3.171,18,2.728,19,2.086,20,2.086,21,0.347,22,0.347,23,0.3,25,2.086,26,0.556,27,1.04,41,0.347,42,0.079,43,0.023,44,0.023,61,2.778,133,1.449,209,2.256,247,2.319,248,1.579,498,3.38,503,3.003,506,3.003,507,3.003,508,3.003,509,3.598,510,3.598,511,3.003,512,3.598]],["title/injectables/UserService.html",[45,1.283,61,1.398]],["body/injectables/UserService.html",[13,0.032,21,0.254,22,0.254,23,0.219,26,0.498,27,0.761,41,0.254,42,0.058,43,0.019,44,0.019,45,1.529,46,1.525,48,0.448,50,1.696,52,1.406,53,3.872,58,2.446,61,1.665,63,1.158,65,2.138,66,1.296,67,0.829,68,1.962,70,1.805,76,1.525,85,2.335,87,1.696,90,3.329,95,2.58,117,1.805,133,2.167,138,0.975,189,1.06,212,1.529,213,2.56,214,1.995,215,1.995,216,1.995,220,1.383,233,1.383,248,1.155,254,3.536,258,3.536,260,2.754,261,4.025,263,2.754,269,2.754,271,1.91,280,1.91,414,3.168,441,2.197,511,2.197,513,2.197,514,2.632,515,2.632,516,3.795,517,2.632,518,2.632,519,2.632,520,2.632,521,2.632,522,3.795,523,2.632,524,2.632,525,2.632,526,2.632,527,2.632]],["title/coverage.html",[528,3.622]],["body/coverage.html",[6,1.372,13,0.032,17,1.659,23,0.239,31,2.078,42,0.13,43,0.02,44,0.02,45,2.038,47,2.389,60,1.372,61,1.256,62,1.256,67,0.487,76,1.659,82,1.372,85,1.372,98,1.153,133,1.153,144,1.659,146,2.389,147,2.933,163,1.504,164,2.389,191,2.235,193,2.389,195,1.256,207,2.235,208,1.845,210,2.389,217,1.504,251,2.389,286,2.389,287,2.924,293,2.389,302,2.389,303,2.924,325,2.389,351,1.845,352,2.389,368,1.659,372,1.659,404,2.389,459,5.342,466,2.389,475,2.078,482,2.078,483,2.389,488,2.389,491,2.078,492,2.389,494,2.389,498,1.845,499,2.389,513,2.389,528,2.389,529,2.862,530,2.862,531,2.862,532,5.06,533,4.029,534,2.389,535,4.029,536,5.899,537,4.662,538,2.389,539,2.862,540,2.862,541,2.862,542,2.389,543,2.862,544,2.862,545,2.862,546,2.862]],["title/dependencies.html",[3,1.835,547,2.224]],["body/dependencies.html",[3,1.971,13,0.032,27,1.189,30,2.984,42,0.113,43,0.025,44,0.025,160,2.161,184,2.984,189,1.656,248,1.804,485,2.65,486,2.65,548,5.845,549,4.111,550,4.111,551,4.111,552,4.111,553,4.111,554,4.111,555,4.111,556,4.111,557,4.111,558,4.111,559,4.111,560,4.111,561,4.111,562,4.111,563,4.111,564,4.111]],["title/miscellaneous/functions.html",[565,1.717,566,3.196]],["body/miscellaneous/functions.html",[6,2.771,13,0.029,43,0.027,44,0.027,48,0.757,65,1.952,66,1.183,67,0.757,68,1.792,150,1.315,267,4.489,475,3.904,534,3.712,542,3.712,565,2.867,566,3.712,567,4.447,568,4.447,569,4.447,570,6.006,571,4.447]],["title/index.html",[48,0.453,572,2.665,573,2.665]],["body/index.html",[13,0.033,43,0.018,44,0.018,138,0.92,189,1.001,215,1.306,574,2.485,575,2.485,576,2.485,577,2.485,578,2.485,579,4.741,580,3.64,581,2.485,582,2.485,583,4.307,584,4.307,585,2.485,586,4.307,587,2.485,588,2.485,589,2.485,590,2.485,591,2.485,592,2.485,593,2.485,594,2.485,595,2.485,596,2.485,597,2.485,598,2.485,599,2.485]],["title/modules.html",[2,1.904]],["body/modules.html",[1,2.893,2,1.97,12,2.359,13,0.027,14,2.602,15,2.602,16,2.359,43,0.027,44,0.027,600,6.024,601,6.024,602,6.024,603,6.165,604,4.488,605,4.488]],["title/overview.html",[606,3.622]],["body/overview.html",[0,1.102,1,4.014,2,1.418,3,1.548,4,1.872,5,1.872,6,1.548,7,1.872,8,1.872,9,2.696,10,2.696,11,2.696,12,3.087,13,0.031,14,2.881,15,3.55,16,3.087,17,2.881,18,2.539,19,1.872,20,1.872,43,0.022,44,0.022,46,1.872,60,2.815,61,2.577,62,2.577,145,1.197,192,1.872,209,1.548,242,2.696,243,2.696,244,2.696,394,2.696,396,2.696,397,2.696,506,2.696,507,2.696,508,2.696,606,2.696,607,3.23,608,4.38,609,3.23,610,3.23]],["title/properties.html",[49,1.202,547,2.224]],["body/properties.html",[13,0.031,43,0.028,44,0.028,49,1.506,611,4.796,612,4.796,613,4.796,614,4.796,615,4.796,616,4.796]],["title/miscellaneous/variables.html",[565,1.717,617,3.196]],["body/miscellaneous/variables.html",[13,0.031,31,3.914,43,0.027,44,0.027,48,0.76,74,3.729,75,3.729,319,3.729,538,3.729,565,2.88,617,3.729,618,4.468,619,4.468,620,4.468,621,4.468,622,5.393,623,4.468,624,5.792,625,4.468,626,4.468,627,4.468]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":459,"title":{},"body":{"injectables/EmploymentService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":612,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":440,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["10.0.0",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["100000",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["17.11.0",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["200000",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["3",{"_index":608,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":609,"title":{},"body":{"overview.html":{}}}],["5",{"_index":607,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":610,"title":{},"body":{"overview.html":{}}}],["__dirname",{"_index":321,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["abstract",{"_index":190,"title":{},"body":{"classes/BaseEntity.html":{}}}],["add",{"_index":597,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["applicant",{"_index":461,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["applicant.id",{"_index":463,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["applicants",{"_index":326,"title":{},"body":{"entities/Employment.html":{},"injectables/EmploymentService.html":{}}}],["application",{"_index":353,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["application(@body",{"_index":383,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["application(dto",{"_index":357,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["applicationemploymentdto",{"_index":144,"title":{"classes/ApplicationEmploymentDto.html":{}},"body":{"classes/ApplicationEmploymentDto.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"coverage.html":{}}}],["applications",{"_index":495,"title":{},"body":{"entities/User.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":17,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":53,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["author",{"_index":616,"title":{},"body":{"properties.html":{}}}],["autoloadentities",{"_index":323,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["available",{"_index":605,"title":{},"body":{"modules.html":{}}}],["await",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":577,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":269,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["baseentity",{"_index":163,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"entities/Company.html":{},"entities/Employment.html":{},"entities/User.html":{},"coverage.html":{}}}],["body",{"_index":228,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":603,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":600,"title":{},"body":{"modules.html":{}}}],["cache",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["cascade",{"_index":329,"title":{},"body":{"entities/Employment.html":{}}}],["chore",{"_index":595,"title":{},"body":{"index.html":{}}}],["class",{"_index":42,"title":{"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":145,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_companymodule",{"_index":242,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_exports",{"_index":243,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_providers",{"_index":244,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_employmentmodule",{"_index":394,"title":{},"body":{"modules/EmploymentModule.html":{},"overview.html":{}}}],["cluster_employmentmodule_exports",{"_index":396,"title":{},"body":{"modules/EmploymentModule.html":{},"overview.html":{}}}],["cluster_employmentmodule_imports",{"_index":395,"title":{},"body":{"modules/EmploymentModule.html":{}}}],["cluster_employmentmodule_providers",{"_index":397,"title":{},"body":{"modules/EmploymentModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":506,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":507,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":508,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":199,"title":{},"body":{"entities/Company.html":{},"entities/Employment.html":{},"entities/User.html":{}}}],["column({name",{"_index":340,"title":{},"body":{"entities/Employment.html":{}}}],["comment",{"_index":599,"title":{},"body":{"index.html":{}}}],["companies",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"entities/Company.html":{}}}],["company",{"_index":98,"title":{"entities/Company.html":{}},"body":{"injectables/AppService.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"entities/Employment.html":{},"injectables/EmploymentService.html":{},"coverage.html":{}}}],["company.controller",{"_index":246,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company.dto",{"_index":234,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":287,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:10",{"_index":291,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":289,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:6",{"_index":290,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.employments",{"_index":334,"title":{},"body":{"entities/Employment.html":{}}}],["company.name",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["company.service",{"_index":232,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{}}}],["company/company.module",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["company/company.service",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["company_id",{"_index":108,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{},"entities/Employment.html":{},"classes/UpdateEmploymentDto.html":{}}}],["companycontroller",{"_index":208,"title":{"controllers/CompanyController.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"coverage.html":{}}}],["companyinitialize",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["companymodule",{"_index":12,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules.html":{},"overview.html":{}}}],["companyrepository",{"_index":256,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companyservice",{"_index":62,"title":{"injectables/CompanyService.html":{}},"body":{"injectables/AppService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"coverage.html":{},"overview.html":{}}}],["compose",{"_index":580,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["configs/validationschema",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":306,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_db",{"_index":320,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_host",{"_index":312,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_password",{"_index":318,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_port",{"_index":314,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_user",{"_index":316,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["conflictexception",{"_index":270,"title":{},"body":{"injectables/CompanyService.html":{}}}],["conflictexception(message",{"_index":281,"title":{},"body":{"injectables/CompanyService.html":{}}}],["const",{"_index":95,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"classes/UpdateEmploymentDto.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["constructor(companyrepository",{"_index":253,"title":{},"body":{"injectables/CompanyService.html":{}}}],["constructor(employmentrepository",{"_index":406,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["constructor(employmentservice",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":236,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["constructor(userrepository",{"_index":514,"title":{},"body":{"injectables/UserService.html":{}}}],["controller",{"_index":207,"title":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('company",{"_index":235,"title":{},"body":{"controllers/CompanyController.html":{}}}],["controller('employment",{"_index":381,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["controller('user",{"_index":504,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":209,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":528,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":212,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":237,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["create(dto",{"_index":216,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createcompanydto",{"_index":217,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created_at",{"_index":171,"title":{},"body":{"classes/BaseEntity.html":{}}}],["created_at'})@expose({name",{"_index":170,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdat",{"_index":165,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/EmploymentService.html":{}}}],["createdatecolumn",{"_index":185,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdatecolumn({name",{"_index":169,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createemploymentdto",{"_index":82,"title":{"classes/CreateEmploymentDto.html":{}},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/UpdateEmploymentDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":85,"title":{"classes/CreateUserDto.html":{}},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["database",{"_index":319,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":14,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":168,"title":{},"body":{"classes/BaseEntity.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":151,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"classes/SearchEmploymentDto.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":230,"title":{},"body":{"controllers/CompanyController.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{}}}],["delete'})@joincolumn({name",{"_index":337,"title":{},"body":{"entities/Employment.html":{}}}],["delete(':id",{"_index":226,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{}}}],["deleted_at",{"_index":174,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deletedat",{"_index":166,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":186,"title":{},"body":{"classes/BaseEntity.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":433,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["description",{"_index":613,"title":{},"body":{"properties.html":{}}}],["docker",{"_index":579,"title":{},"body":{"index.html":{}}}],["docker:down",{"_index":588,"title":{},"body":{"index.html":{}}}],["docker:up",{"_index":585,"title":{},"body":{"index.html":{}}}],["docs",{"_index":592,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":220,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.company_id",{"_index":424,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["dto.name",{"_index":274,"title":{},"body":{"injectables/CompanyService.html":{}}}],["dto.objectification",{"_index":427,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["dto.position",{"_index":445,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["dto.required_skill",{"_index":444,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["dto.reward",{"_index":446,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["dto.summary",{"_index":447,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["dto/application",{"_index":380,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["dto/create",{"_index":233,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/search",{"_index":379,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["dto/update",{"_index":378,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["employment",{"_index":195,"title":{"entities/Employment.html":{}},"body":{"entities/Company.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"entities/User.html":{},"coverage.html":{}}}],["employment.applicants",{"_index":462,"title":{},"body":{"injectables/EmploymentService.html":{},"entities/User.html":{}}}],["employment.applicants.push(user",{"_index":464,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["employment.company",{"_index":197,"title":{},"body":{"entities/Company.html":{}}}],["employment.company.employments.findindex",{"_index":437,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["employment.company.employments.splice(selfindex",{"_index":439,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["employment.controller",{"_index":399,"title":{},"body":{"modules/EmploymentModule.html":{}}}],["employment.dto",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/UpdateEmploymentDto.html":{}}}],["employment.dto.ts",{"_index":147,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateEmploymentDto.html":{},"coverage.html":{}}}],["employment.dto.ts:10",{"_index":154,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"classes/CreateEmploymentDto.html":{}}}],["employment.dto.ts:12",{"_index":155,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{}}}],["employment.dto.ts:14",{"_index":298,"title":{},"body":{"classes/CreateEmploymentDto.html":{},"classes/SearchEmploymentDto.html":{}}}],["employment.dto.ts:18",{"_index":299,"title":{},"body":{"classes/CreateEmploymentDto.html":{}}}],["employment.dto.ts:19",{"_index":472,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["employment.dto.ts:22",{"_index":295,"title":{},"body":{"classes/CreateEmploymentDto.html":{}}}],["employment.dto.ts:24",{"_index":300,"title":{},"body":{"classes/CreateEmploymentDto.html":{},"classes/SearchEmploymentDto.html":{}}}],["employment.dto.ts:29",{"_index":470,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["employment.dto.ts:31",{"_index":473,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["employment.dto.ts:6",{"_index":153,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"classes/CreateEmploymentDto.html":{}}}],["employment.dto.ts:9",{"_index":468,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["employment.id",{"_index":438,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["employment.service",{"_index":377,"title":{},"body":{"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{}}}],["employment/dto/create",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["employment/employment.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["employment/employment.service",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["employment_applicants_user",{"_index":331,"title":{},"body":{"entities/Employment.html":{}}}],["employment_id",{"_index":148,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{}}}],["employmentcontroller",{"_index":351,"title":{"controllers/EmploymentController.html":{}},"body":{"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"coverage.html":{}}}],["employmentid",{"_index":156,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"injectables/EmploymentService.html":{}}}],["employmentinitialize",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["employmentmodule",{"_index":15,"title":{"modules/EmploymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmploymentModule.html":{},"modules.html":{},"overview.html":{}}}],["employmentrepository",{"_index":408,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["employments",{"_index":194,"title":{},"body":{"entities/Company.html":{},"entities/Employment.html":{},"injectables/EmploymentService.html":{}}}],["employments.length",{"_index":458,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["employmentservice",{"_index":60,"title":{"injectables/EmploymentService.html":{}},"body":{"injectables/AppService.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"coverage.html":{},"overview.html":{}}}],["entities",{"_index":192,"title":{},"body":{"entities/Company.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/company.entity",{"_index":249,"title":{},"body":{"modules/CompanyModule.html":{},"injectables/CompanyService.html":{}}}],["entities/employment.entity",{"_index":400,"title":{},"body":{"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{}}}],["entities/user.entity",{"_index":511,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":191,"title":{"entities/Company.html":{},"entities/Employment.html":{},"entities/User.html":{}},"body":{"entities/Company.html":{},"entities/Employment.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":322,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["env",{"_index":582,"title":{},"body":{"index.html":{}}}],["example.env",{"_index":581,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":182,"title":{},"body":{"classes/BaseEntity.html":{}}}],["exclude()@deletedatecolumn({name",{"_index":173,"title":{},"body":{"classes/BaseEntity.html":{}}}],["export",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["expose",{"_index":183,"title":{},"body":{"classes/BaseEntity.html":{},"entities/Employment.html":{}}}],["express",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":206,"title":{},"body":{"entities/Company.html":{},"entities/Employment.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["feat",{"_index":590,"title":{},"body":{"index.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":213,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findapplicants",{"_index":354,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["findapplicants(@param('id",{"_index":389,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["findapplicants(id",{"_index":362,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["findone",{"_index":214,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":239,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":222,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["findone(options",{"_index":260,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["findoptionswhere",{"_index":261,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["fix",{"_index":591,"title":{},"body":{"index.html":{}}}],["function",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":566,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":223,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["get('applicants/:id",{"_index":363,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["get('search",{"_index":369,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["getting",{"_index":572,"title":{"index.html":{}},"body":{}}],["graph",{"_index":604,"title":{},"body":{"modules.html":{}}}],["host",{"_index":311,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["id",{"_index":138,"title":{},"body":{"injectables/AppService.html":{},"classes/BaseEntity.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["identifier",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["ifexistthrow",{"_index":252,"title":{},"body":{"injectables/CompanyService.html":{}}}],["ifexistthrow(options",{"_index":264,"title":{},"body":{"injectables/CompanyService.html":{}}}],["implements",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["import",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/DatabaseModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":48,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":308,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["injectable",{"_index":45,"title":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":271,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["injectrepository(company",{"_index":272,"title":{},"body":{"injectables/CompanyService.html":{}}}],["injectrepository(employment",{"_index":423,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["injectrepository(user",{"_index":521,"title":{},"body":{"injectables/UserService.html":{}}}],["isalphanumeric",{"_index":301,"title":{},"body":{"classes/CreateEmploymentDto.html":{},"classes/SearchEmploymentDto.html":{}}}],["isalphanumeric()@isnotempty",{"_index":297,"title":{},"body":{"classes/CreateEmploymentDto.html":{}}}],["isalphanumeric()@isoptional()@isnotblank",{"_index":471,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["isglobal",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotblank",{"_index":475,"title":{},"body":{"classes/SearchEmploymentDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotblank(property",{"_index":569,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotempty",{"_index":292,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{}}}],["isoptional",{"_index":474,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["isstring",{"_index":158,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"classes/SearchEmploymentDto.html":{}}}],["isstring()@isnotempty",{"_index":288,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@isuuid",{"_index":294,"title":{},"body":{"classes/CreateEmploymentDto.html":{}}}],["isstring()@isoptional()@isnotblank",{"_index":469,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["isstring()@isoptional()@isnotblank()@isuuid",{"_index":467,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["isstring()@isuuid",{"_index":152,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{}}}],["isuuid",{"_index":159,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/SearchEmploymentDto.html":{}}}],["javascript",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["joi",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["joi.number().required",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":347,"title":{},"body":{"entities/Employment.html":{}}}],["jointable",{"_index":348,"title":{},"body":{"entities/Employment.html":{}}}],["kakao",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["kakao.id",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["kakaoemployment",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":614,"title":{},"body":{"properties.html":{}}}],["like(`%${query.position",{"_index":449,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["like(`%${query.requiredskill",{"_index":454,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["like(`%${query.summary",{"_index":457,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["location",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"entities/Company.html":{},"classes/CreateCompanyDto.html":{},"injectables/EmploymentService.html":{}}}],["logger",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["logger('app",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["manytomany",{"_index":349,"title":{},"body":{"entities/Employment.html":{},"entities/User.html":{}}}],["manytomany(undefined",{"_index":327,"title":{},"body":{"entities/Employment.html":{},"entities/User.html":{}}}],["manytoone",{"_index":350,"title":{},"body":{"entities/Employment.html":{}}}],["manytoone(undefined",{"_index":333,"title":{},"body":{"entities/Employment.html":{}}}],["matching",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":265,"title":{},"body":{"injectables/CompanyService.html":{}}}],["metadata",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateEmploymentDto.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":565,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/DatabaseModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/DatabaseModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/DatabaseModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["morethan",{"_index":420,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["morethan(query.reward",{"_index":452,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["move",{"_index":598,"title":{},"body":{"index.html":{}}}],["name",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["names[0",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["names[1",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["nation",{"_index":103,"title":{},"body":{"injectables/AppService.html":{},"entities/Company.html":{},"classes/CreateCompanyDto.html":{},"injectables/EmploymentService.html":{}}}],["naver",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["naver.id",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["naveremployment",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["nest.js",{"_index":589,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"modules/DatabaseModule.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":485,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":248,"title":{},"body":{"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"modules/DatabaseModule.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newcompany",{"_index":275,"title":{},"body":{"injectables/CompanyService.html":{}}}],["newemployment",{"_index":425,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["newuser",{"_index":522,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception",{"_index":419,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["npm",{"_index":583,"title":{},"body":{"index.html":{}}}],["number",{"_index":296,"title":{},"body":{"classes/CreateEmploymentDto.html":{},"entities/Employment.html":{},"classes/SearchEmploymentDto.html":{}}}],["objectification",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/SearchEmploymentDto.html":{}}}],["omittype",{"_index":489,"title":{},"body":{"classes/UpdateEmploymentDto.html":{}}}],["omittype(createemploymentdto",{"_index":490,"title":{},"body":{"classes/UpdateEmploymentDto.html":{}}}],["onboarding",{"_index":576,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":335,"title":{},"body":{"entities/Employment.html":{}}}],["onetomany",{"_index":205,"title":{},"body":{"entities/Company.html":{}}}],["onetomany(undefined",{"_index":196,"title":{},"body":{"entities/Company.html":{}}}],["onmoduleinit",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["optional",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":263,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["options.id",{"_index":435,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["order",{"_index":432,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["orphanedrowaction",{"_index":336,"title":{},"body":{"entities/Employment.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":606,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":547,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":229,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":392,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["parameters",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseuuidpipe",{"_index":231,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["partialtype",{"_index":484,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcompanydto",{"_index":487,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createuserdto",{"_index":493,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["password",{"_index":317,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["pg",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":313,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["position",{"_index":110,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{},"entities/Employment.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{}}}],["post",{"_index":218,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["post('application",{"_index":358,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["postgres",{"_index":310,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["postgres_db",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_password",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_port",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_user",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql",{"_index":586,"title":{},"body":{"index.html":{}}}],["pre",{"_index":575,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":211,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":187,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":176,"title":{},"body":{"classes/BaseEntity.html":{}}}],["private",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["project",{"_index":578,"title":{},"body":{"index.html":{}}}],["properties",{"_index":49,"title":{"properties.html":{}},"body":{"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"entities/Employment.html":{},"classes/SearchEmploymentDto.html":{},"entities/User.html":{},"properties.html":{}}}],["property",{"_index":571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":375,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["put(':id",{"_index":373,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["query",{"_index":376,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["query.id",{"_index":455,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["query.position",{"_index":448,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["query.requiredskill",{"_index":453,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["query.reward",{"_index":451,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["query.summary",{"_index":456,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["readonly",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"controllers/UserController.html":{}}}],["refactor",{"_index":594,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":431,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["remove",{"_index":215,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["remove(@param('id",{"_index":240,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/EmploymentController.html":{}}}],["remove(id",{"_index":225,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/EmploymentController.html":{}}}],["remove(options",{"_index":414,"title":{},"body":{"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["rename",{"_index":596,"title":{},"body":{"index.html":{}}}],["repository",{"_index":254,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["required_skill",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{},"entities/Employment.html":{},"classes/SearchEmploymentDto.html":{}}}],["required_skill'})@expose({name",{"_index":341,"title":{},"body":{"entities/Employment.html":{}}}],["requiredskill",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{},"entities/Employment.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":278,"title":{},"body":{"injectables/CompanyService.html":{}}}],["results",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":117,"title":{},"body":{"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateEmploymentDto.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateEmploymentDto.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reward",{"_index":113,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{},"entities/Employment.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{}}}],["run",{"_index":584,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["seach",{"_index":355,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["seach(@query",{"_index":386,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["seach(dto",{"_index":367,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["search",{"_index":405,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["search(dto",{"_index":416,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["searchemploymentdto",{"_index":368,"title":{"classes/SearchEmploymentDto.html":{}},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"coverage.html":{}}}],["select",{"_index":430,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["selfindex",{"_index":436,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["server",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server_port",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"modules/EmploymentModule.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/.../isnotblank.decorator.ts",{"_index":568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validationschema.ts",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":47,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:10",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:18",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:26",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:47",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:94",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/baseentity",{"_index":203,"title":{},"body":{"entities/Company.html":{},"entities/Employment.html":{},"entities/User.html":{}}}],["src/common/baseentity.ts",{"_index":164,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/common/baseentity.ts:11",{"_index":177,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/common/baseentity.ts:15",{"_index":172,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/common/baseentity.ts:19",{"_index":181,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/common/baseentity.ts:23",{"_index":175,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/common/isnotblank.decorator",{"_index":476,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["src/common/isnotblank.decorator.ts",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/company/company.controller.ts",{"_index":210,"title":{},"body":{"controllers/CompanyController.html":{},"coverage.html":{}}}],["src/company/company.controller.ts:18",{"_index":219,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:23",{"_index":221,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:28",{"_index":224,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:33",{"_index":227,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.module",{"_index":401,"title":{},"body":{"modules/EmploymentModule.html":{}}}],["src/company/company.module.ts",{"_index":245,"title":{},"body":{"modules/CompanyModule.html":{}}}],["src/company/company.service",{"_index":421,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/company/company.service.ts",{"_index":251,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["src/company/company.service.ts:12",{"_index":255,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:18",{"_index":257,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:26",{"_index":266,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:31",{"_index":259,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:35",{"_index":262,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:43",{"_index":268,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/dto/create",{"_index":286,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/company/dto/update",{"_index":483,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/company/entities/company.entity",{"_index":345,"title":{},"body":{"entities/Employment.html":{}}}],["src/company/entities/company.entity.ts",{"_index":193,"title":{},"body":{"entities/Company.html":{},"coverage.html":{}}}],["src/company/entities/company.entity.ts:11",{"_index":202,"title":{},"body":{"entities/Company.html":{}}}],["src/company/entities/company.entity.ts:14",{"_index":200,"title":{},"body":{"entities/Company.html":{}}}],["src/company/entities/company.entity.ts:17",{"_index":198,"title":{},"body":{"entities/Company.html":{}}}],["src/company/entities/company.entity.ts:8",{"_index":201,"title":{},"body":{"entities/Company.html":{}}}],["src/configs/validationschema.ts",{"_index":538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":305,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/employment/dto/application",{"_index":146,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"coverage.html":{}}}],["src/employment/dto/create",{"_index":293,"title":{},"body":{"classes/CreateEmploymentDto.html":{},"coverage.html":{}}}],["src/employment/dto/search",{"_index":466,"title":{},"body":{"classes/SearchEmploymentDto.html":{},"coverage.html":{}}}],["src/employment/dto/update",{"_index":488,"title":{},"body":{"classes/UpdateEmploymentDto.html":{},"coverage.html":{}}}],["src/employment/employment.controller.ts",{"_index":352,"title":{},"body":{"controllers/EmploymentController.html":{},"coverage.html":{}}}],["src/employment/employment.controller.ts:23",{"_index":360,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["src/employment/employment.controller.ts:28",{"_index":359,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["src/employment/employment.controller.ts:33",{"_index":361,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["src/employment/employment.controller.ts:38",{"_index":370,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["src/employment/employment.controller.ts:43",{"_index":365,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["src/employment/employment.controller.ts:48",{"_index":364,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["src/employment/employment.controller.ts:53",{"_index":366,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["src/employment/employment.controller.ts:58",{"_index":374,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["src/employment/employment.module.ts",{"_index":398,"title":{},"body":{"modules/EmploymentModule.html":{}}}],["src/employment/employment.service.ts",{"_index":404,"title":{},"body":{"injectables/EmploymentService.html":{},"coverage.html":{}}}],["src/employment/employment.service.ts:100",{"_index":418,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/employment/employment.service.ts:111",{"_index":417,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/employment/employment.service.ts:151",{"_index":409,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/employment/employment.service.ts:17",{"_index":407,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/employment/employment.service.ts:183",{"_index":412,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/employment/employment.service.ts:25",{"_index":410,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/employment/employment.service.ts:37",{"_index":411,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/employment/employment.service.ts:55",{"_index":413,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/employment/employment.service.ts:94",{"_index":415,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/employment/entities/employment.entity",{"_index":204,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["src/employment/entities/employment.entity.ts",{"_index":325,"title":{},"body":{"entities/Employment.html":{},"coverage.html":{}}}],["src/employment/entities/employment.entity.ts:17",{"_index":339,"title":{},"body":{"entities/Employment.html":{}}}],["src/employment/entities/employment.entity.ts:20",{"_index":343,"title":{},"body":{"entities/Employment.html":{}}}],["src/employment/entities/employment.entity.ts:23",{"_index":344,"title":{},"body":{"entities/Employment.html":{}}}],["src/employment/entities/employment.entity.ts:27",{"_index":342,"title":{},"body":{"entities/Employment.html":{}}}],["src/employment/entities/employment.entity.ts:34",{"_index":338,"title":{},"body":{"entities/Employment.html":{}}}],["src/employment/entities/employment.entity.ts:40",{"_index":332,"title":{},"body":{"entities/Employment.html":{}}}],["src/main.ts",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/create",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":492,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":346,"title":{},"body":{"entities/Employment.html":{}}}],["src/user/entities/user.entity.ts",{"_index":494,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":496,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":497,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.controller.ts",{"_index":499,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:17",{"_index":500,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:22",{"_index":501,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:27",{"_index":502,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":402,"title":{},"body":{"modules/EmploymentModule.html":{}}}],["src/user/user.module.ts",{"_index":509,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":422,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["src/user/user.service.ts",{"_index":513,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:14",{"_index":517,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:22",{"_index":518,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":519,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":520,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":515,"title":{},"body":{"injectables/UserService.html":{}}}],["start:dev",{"_index":587,"title":{},"body":{"index.html":{}}}],["started",{"_index":573,"title":{"index.html":{}},"body":{}}],["statements",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":150,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":593,"title":{},"body":{"index.html":{}}}],["summary",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{},"entities/Employment.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{}}}],["support",{"_index":601,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":602,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":324,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["table",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["this.company_id",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{}}}],["this.companyinitialize",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["this.companyrepository.create(dto",{"_index":276,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.exist",{"_index":279,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.find",{"_index":282,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.findoneby(options",{"_index":283,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.remove(company",{"_index":285,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.save(newcompany",{"_index":277,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyservice.create",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["this.companyservice.create(dto",{"_index":238,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.findall",{"_index":97,"title":{},"body":{"injectables/AppService.html":{},"controllers/CompanyController.html":{}}}],["this.companyservice.findone",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"controllers/CompanyController.html":{},"injectables/EmploymentService.html":{}}}],["this.companyservice.remove(company.id",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["this.companyservice.remove(id",{"_index":241,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.employment_id",{"_index":161,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{}}}],["this.employmentinitialize",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["this.employmentrepository.create",{"_index":426,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["this.employmentrepository.find",{"_index":429,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["this.employmentrepository.findone",{"_index":434,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["this.employmentrepository.remove(employment",{"_index":442,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["this.employmentrepository.save(employment",{"_index":465,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["this.employmentrepository.save(newemployment",{"_index":428,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["this.employmentrepository.update(id",{"_index":443,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["this.employmentservice.application(dto",{"_index":384,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["this.employmentservice.create(dto",{"_index":382,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["this.employmentservice.create(kakaoemployment",{"_index":128,"title":{},"body":{"injectables/AppService.html":{}}}],["this.employmentservice.create(naveremployment",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["this.employmentservice.findall",{"_index":385,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["this.employmentservice.findapplicants(id",{"_index":390,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["this.employmentservice.findone",{"_index":388,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["this.employmentservice.remove",{"_index":391,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["this.employmentservice.search(dto",{"_index":387,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["this.employmentservice.update(id",{"_index":393,"title":{},"body":{"controllers/EmploymentController.html":{}}}],["this.findone",{"_index":284,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{}}}],["this.findone(options",{"_index":441,"title":{},"body":{"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["this.ifexistthrow",{"_index":273,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.logger.log",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["this.position",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{}}}],["this.required_skill",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{}}}],["this.reward",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{}}}],["this.summary",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEmploymentDto.html":{}}}],["this.user_id",{"_index":162,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{}}}],["this.userinitialize",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["this.userrepository.create(dto",{"_index":523,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":525,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneby(options",{"_index":526,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.remove(user",{"_index":527,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":524,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(dto",{"_index":505,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.create(user1",{"_index":142,"title":{},"body":{"injectables/AppService.html":{}}}],["this.userservice.create(user2",{"_index":143,"title":{},"body":{"injectables/AppService.html":{}}}],["this.userservice.findall",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"controllers/UserController.html":{}}}],["this.userservice.findone",{"_index":460,"title":{},"body":{"injectables/EmploymentService.html":{},"controllers/UserController.html":{}}}],["this.userservice.remove",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["this?.id",{"_index":477,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["this?.position",{"_index":478,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["this?.required_skill",{"_index":481,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["this?.reward",{"_index":479,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["this?.summary",{"_index":480,"title":{},"body":{"classes/SearchEmploymentDto.html":{}}}],["throw",{"_index":280,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["transformer",{"_index":184,"title":{},"body":{"classes/BaseEntity.html":{},"entities/Employment.html":{},"dependencies.html":{}}}],["true",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"injectables/EmploymentService.html":{}}}],["true})@jointable({name",{"_index":330,"title":{},"body":{"entities/Employment.html":{}}}],["type",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"classes/ApplicationEmploymentDto.html":{},"classes/BaseEntity.html":{},"entities/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/Employment.html":{},"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/SearchEmploymentDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeorm",{"_index":189,"title":{},"body":{"classes/BaseEntity.html":{},"entities/Company.html":{},"injectables/CompanyService.html":{},"entities/Employment.html":{},"injectables/EmploymentService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":247,"title":{},"body":{"modules/CompanyModule.html":{},"modules/DatabaseModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([company",{"_index":250,"title":{},"body":{"modules/CompanyModule.html":{}}}],["typeormmodule.forfeature([employment",{"_index":403,"title":{},"body":{"modules/EmploymentModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":512,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":307,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":486,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateEmploymentDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":126,"title":{},"body":{"injectables/AppService.html":{}}}],["undefined",{"_index":450,"title":{},"body":{"injectables/EmploymentService.html":{}}}],["unknown",{"_index":258,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EmploymentService.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":615,"title":{},"body":{"properties.html":{}}}],["update",{"_index":356,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["update(id",{"_index":371,"title":{},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{}}}],["updatecompanydto",{"_index":482,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updated_at",{"_index":180,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updated_at'})@expose({name",{"_index":179,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedat",{"_index":167,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/EmploymentService.html":{}}}],["updatedatecolumn",{"_index":188,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn({name",{"_index":178,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateemploymentdto",{"_index":372,"title":{"classes/UpdateEmploymentDto.html":{}},"body":{"controllers/EmploymentController.html":{},"injectables/EmploymentService.html":{},"classes/UpdateEmploymentDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":491,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["usefactory",{"_index":309,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["user",{"_index":133,"title":{"entities/User.html":{}},"body":{"injectables/AppService.html":{},"entities/Employment.html":{},"injectables/EmploymentService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.applications",{"_index":328,"title":{},"body":{"entities/Employment.html":{}}}],["user.controller",{"_index":510,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:6",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":139,"title":{},"body":{"injectables/AppService.html":{},"injectables/EmploymentService.html":{}}}],["user.name",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["user.service",{"_index":503,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/dto/create",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["user/user.module",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.service",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["user1",{"_index":140,"title":{},"body":{"injectables/AppService.html":{}}}],["user2",{"_index":141,"title":{},"body":{"injectables/AppService.html":{}}}],["user_id",{"_index":149,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{}}}],["usercontroller",{"_index":498,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":157,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"injectables/EmploymentService.html":{}}}],["userinitialize",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["usermodule",{"_index":16,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":315,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["userrepository",{"_index":516,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":131,"title":{},"body":{"injectables/AppService.html":{},"entities/User.html":{}}}],["userservice",{"_index":61,"title":{"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/EmploymentService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validationoptions",{"_index":570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationschema",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":160,"title":{},"body":{"classes/ApplicationEmploymentDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateEmploymentDto.html":{},"classes/CreateUserDto.html":{},"classes/SearchEmploymentDto.html":{},"dependencies.html":{}}}],["value",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":617,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":611,"title":{},"body":{"properties.html":{}}}],["wanted",{"_index":574,"title":{},"body":{"index.html":{}}}],["yes",{"_index":267,"title":{},"body":{"injectables/CompanyService.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/EmploymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nEmploymentModule\n\nEmploymentModule\n\nAppModule -->\n\nEmploymentModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CompanyModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            EmploymentModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { validationSchema } from './configs/validationSchema';\nimport { DatabaseModule } from './database/database.module';\nimport { EmploymentModule } from './employment/employment.module';\nimport { UserModule } from './user/user.module';\nimport { CompanyModule } from './company/company.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      cache: true,\n      isGlobal: true,\n      validationSchema,\n    }),\n    DatabaseModule,\n    EmploymentModule,\n    UserModule,\n    CompanyModule,\n  ],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                companyInitialize\n                            \n                            \n                                    Async\n                                employmentInitialize\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                userInitialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employmentService: EmploymentService, userService: UserService, companyService: CompanyService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employmentService\n                                                  \n                                                        \n                                                                        EmploymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyService\n                                                  \n                                                        \n                                                                        CompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        companyInitialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    companyInitialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        employmentInitialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    employmentInitialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userInitialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    userInitialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('App Service')\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { EmploymentService } from './employment/employment.service';\nimport { UserService } from './user/user.service';\nimport { CompanyService } from './company/company.service';\nimport { CreateEmploymentDto } from './employment/dto/create-employment.dto';\nimport { CreateUserDto } from './user/dto/create-user.dto';\n\n@Injectable()\nexport class AppService implements OnModuleInit {\n  private logger = new Logger('App Service');\n\n  constructor(\n    private readonly employmentService: EmploymentService,\n    private readonly userService: UserService,\n    private readonly companyService: CompanyService,\n  ) {}\n\n  async onModuleInit() {\n    await this.companyInitialize();\n    await this.employmentInitialize();\n    await this.userInitialize();\n\n    this.logger.log(`회사, 채용 공고, 유저 초기화 완료.`);\n  }\n\n  async companyInitialize() {\n    const companies = await this.companyService.findAll();\n\n    for (const company of companies) {\n      if (company.name == '네이버' || company.name == '카카오')\n        await this.companyService.remove(company.id);\n    }\n\n    await this.companyService.create({\n      location: '서울',\n      name: '네이버',\n      nation: '한국',\n    });\n\n    await this.companyService.create({\n      location: '판교',\n      name: '카카오',\n      nation: '한국',\n    });\n  }\n\n  async employmentInitialize() {\n    const kakao = await this.companyService.findOne({\n      name: '카카오',\n    });\n\n    const naver = await this.companyService.findOne({\n      name: '네이버',\n    });\n\n    const kakaoEmployment: CreateEmploymentDto = {\n      company_id: kakao.id,\n      position: '주니어 백엔드 개발자',\n      required_skill: 'Javascript',\n      reward: 100000,\n      summary: '카카오에서 주니어 백엔드 개발자를 모집합니다.',\n      objectification() {\n        return {\n          company_id: this.company_id,\n          position: this.position,\n          reward: this.reward,\n          summary: this.summary,\n          requiredSkill: this.required_skill,\n        };\n      },\n    };\n\n    const naverEmployment: CreateEmploymentDto = {\n      company_id: naver.id,\n      position: '주니어 프론트엔드 개발자',\n      required_skill: 'Typescript',\n      reward: 200000,\n      summary: '네이버에서 주니어 프론트엔드 개발자를 모집합니다.',\n      objectification() {\n        return {\n          company_id: this.company_id,\n          position: this.position,\n          reward: this.reward,\n          summary: this.summary,\n          requiredSkill: this.required_skill,\n        };\n      },\n    };\n\n    await this.employmentService.create(kakaoEmployment);\n    await this.employmentService.create(naverEmployment);\n  }\n\n  async userInitialize() {\n    const names = ['홍길동', '아무개'];\n\n    const users = await this.userService.findAll();\n\n    for (const user of users) {\n      if (user.name == names[0] || user.name == names[1])\n        await this.userService.remove({ id: user.id });\n    }\n\n    const user1: CreateUserDto = {\n      name: names[0],\n    };\n\n    const user2: CreateUserDto = {\n      name: names[1],\n    };\n\n    await this.userService.create(user1);\n    await this.userService.create(user2);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationEmploymentDto.html":{"url":"classes/ApplicationEmploymentDto.html","title":"class - ApplicationEmploymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationEmploymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employment/dto/application-employment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                employment_id\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                objectification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employment_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/application-employment.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/application-employment.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        objectification\n                        \n                    \n                \n            \n            \n                \nobjectification()\n                \n            \n\n\n            \n                \n                    Defined in src/employment/dto/application-employment.dto.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { employmentId: string; userId: string; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsUUID } from 'class-validator';\n\nexport class ApplicationEmploymentDto {\n  @IsString()\n  @IsUUID()\n  employment_id: string;\n\n  @IsString()\n  @IsUUID()\n  user_id: string;\n\n  objectification() {\n    return {\n      employmentId: this.employment_id,\n      userId: this.user_id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/BaseEntity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at'})@Expose({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/BaseEntity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@DeleteDateColumn({name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/BaseEntity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/BaseEntity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at'})@Expose({name: 'updated_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/BaseEntity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport {\n  CreateDateColumn,\n  DeleteDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport abstract class BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn({ name: 'created_at' })\n  @Expose({ name: 'created_at' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at' })\n  @Expose({ name: 'updated_at' })\n  updatedAt: Date;\n\n  @Exclude()\n  @DeleteDateColumn({ name: 'deleted_at' })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Company.html":{"url":"entities/Company.html","title":"entity - Company","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/entities/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                employments\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                nation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Employment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, employment => employment.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/entities/company.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/entities/company.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/entities/company.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/entities/company.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from 'src/common/BaseEntity';\nimport { Employment } from 'src/employment/entities/employment.entity';\nimport { Column, Entity, OneToMany } from 'typeorm';\n\n@Entity({ name: 'companies' })\nexport class Company extends BaseEntity {\n  @Column()\n  name: string;\n\n  @Column()\n  nation: string;\n\n  @Column()\n  location: string;\n\n  @OneToMany(() => Employment, (employment) => employment.company)\n  employments: Employment[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompanyController.html":{"url":"controllers/CompanyController.html","title":"controller - CompanyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompanyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                company\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateCompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  ParseUUIDPipe,\n} from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\n\n@Controller('company')\nexport class CompanyController {\n  constructor(private readonly companyService: CompanyService) {}\n\n  @Post()\n  create(@Body() dto: CreateCompanyDto) {\n    return this.companyService.create(dto);\n  }\n\n  @Get()\n  findAll() {\n    return this.companyService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id', ParseUUIDPipe) id: string) {\n    return this.companyService.findOne({ id });\n  }\n\n  @Delete(':id')\n  remove(@Param('id', ParseUUIDPipe) id: string) {\n    return this.companyService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CompanyModule_providers\n\n\n\n\nCompanyService \n\nCompanyService \n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/company/company.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompanyController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CompanyController } from './company.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Company } from './entities/company.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Company])],\n  controllers: [CompanyController],\n  providers: [CompanyService],\n  exports: [CompanyService],\n})\nexport class CompanyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                ifExistThrow\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/company/company.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateCompanyDto)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(options: FindOptionsWhere)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindOptionsWhere\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ifExistThrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    ifExistThrow(options: FindOptionsWhere, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindOptionsWhere\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n} from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Company } from './entities/company.entity';\nimport { FindOptionsWhere, Repository } from 'typeorm';\n\n@Injectable()\nexport class CompanyService {\n  constructor(\n    @InjectRepository(Company)\n    private companyRepository: Repository,\n  ) {}\n\n  async create(dto: CreateCompanyDto) {\n    await this.ifExistThrow({ name: dto.name }, '이미 존재하는 회사명입니다.');\n\n    const newCompany = this.companyRepository.create(dto);\n    await this.companyRepository.save(newCompany);\n    return newCompany;\n  }\n\n  async ifExistThrow(options: FindOptionsWhere, message?: string) {\n    const result = await this.companyRepository.exist({ where: options });\n    if (result) throw new ConflictException(message);\n  }\n\n  async findAll() {\n    return await this.companyRepository.find();\n  }\n\n  async findOne(options: FindOptionsWhere) {\n    const company = await this.companyRepository.findOneBy(options);\n\n    if (company) return company;\n\n    throw new BadRequestException('잘못된 회사 식별자 입니다.');\n  }\n\n  async remove(id: string) {\n    const company = await this.findOne({ id });\n    if (company) return await this.companyRepository.remove(company);\n\n    throw new BadRequestException('잘못된 회사 식별자 입니다.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                nation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  nation: string;\n\n  @IsString()\n  @IsNotEmpty()\n  location: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmploymentDto.html":{"url":"classes/CreateEmploymentDto.html","title":"class - CreateEmploymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmploymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employment/dto/create-employment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                company_id\n                            \n                            \n                                    \n                                    \n                                position\n                            \n                            \n                                    \n                                    \n                                required_skill\n                            \n                            \n                                    \n                                    \n                                reward\n                            \n                            \n                                    \n                                    \n                                summary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                objectification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        company_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/create-employment.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/create-employment.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        required_skill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/create-employment.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reward\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/create-employment.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        summary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/create-employment.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        objectification\n                        \n                    \n                \n            \n            \n                \nobjectification()\n                \n            \n\n\n            \n                \n                    Defined in src/employment/dto/create-employment.dto.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { company_id: string; position: string; reward: number; summary: string; requiredSkill: string; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty, IsString, IsUUID } from 'class-validator';\nexport class CreateEmploymentDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsUUID()\n  company_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  position: string;\n\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  reward: number;\n\n  @IsString()\n  @IsNotEmpty()\n  summary: string;\n\n  @IsString()\n  @IsNotEmpty()\n  required_skill: string;\n\n  objectification() {\n    return {\n      company_id: this.company_id,\n      position: this.position,\n      reward: this.reward,\n      summary: this.summary,\n      requiredSkill: this.required_skill,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get('POSTGRES_HOST'),\n        port: configService.get('POSTGRES_PORT'),\n        username: configService.get('POSTGRES_USER'),\n        password: configService.get('POSTGRES_PASSWORD'),\n        database: configService.get('POSTGRES_DB'),\n        entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n        autoLoadEntities: true,\n        synchronize: true,\n      }),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Employment.html":{"url":"entities/Employment.html","title":"entity - Employment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Employment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employment/entities/employment.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                applicants\n                            \n                            \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                position\n                            \n                            \n                                    \n                                    \n                                requiredSkill\n                            \n                            \n                                    \n                                reward\n                            \n                            \n                                    \n                                summary\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        applicants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, user => user.applications, {cascade: true})@JoinTable({name: 'employment_applicants_user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/entities/employment.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employments, {onDelete: 'CASCADE', orphanedRowAction: 'delete'})@JoinColumn({name: 'company_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/entities/employment.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/entities/employment.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        requiredSkill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'required_skill'})@Expose({name: 'required_skill'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/entities/employment.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reward\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/entities/employment.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        summary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/entities/employment.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { BaseEntity } from 'src/common/BaseEntity';\nimport { Company } from 'src/company/entities/company.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n} from 'typeorm';\n\n@Entity({ name: 'employments' })\nexport class Employment extends BaseEntity {\n  @Column()\n  position: string;\n\n  @Column()\n  reward: number;\n\n  @Column()\n  summary: string;\n\n  @Column({ name: 'required_skill' })\n  @Expose({ name: 'required_skill' })\n  requiredSkill: string;\n\n  @ManyToOne(() => Company, (company) => company.employments, {\n    onDelete: 'CASCADE',\n    orphanedRowAction: 'delete',\n  })\n  @JoinColumn({ name: 'company_id' })\n  company: Company;\n\n  @ManyToMany(() => User, (user) => user.applications, {\n    cascade: true,\n  })\n  @JoinTable({ name: 'employment_applicants_user' })\n  applicants: User[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmploymentController.html":{"url":"controllers/EmploymentController.html","title":"controller - EmploymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmploymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employment/employment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                application\n                            \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findApplicants\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                seach\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        application\n                        \n                    \n                \n            \n            \n                \n                    \n                    application(dto: ApplicationEmploymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('application')\n                \n            \n\n            \n                \n                    Defined in src/employment/employment.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ApplicationEmploymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateEmploymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/employment/employment.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateEmploymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/employment/employment.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findApplicants\n                        \n                    \n                \n            \n            \n                \n                    \n                    findApplicants(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('applicants/:id')\n                \n            \n\n            \n                \n                    Defined in src/employment/employment.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/employment/employment.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/employment/employment.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        seach\n                        \n                    \n                \n            \n            \n                \n                    \n                    seach(dto: SearchEmploymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search')\n                \n            \n\n            \n                \n                    Defined in src/employment/employment.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                SearchEmploymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateEmploymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/employment/employment.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateEmploymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  Put,\n  Query,\n  ParseUUIDPipe,\n} from '@nestjs/common';\nimport { EmploymentService } from './employment.service';\nimport { CreateEmploymentDto } from './dto/create-employment.dto';\nimport { UpdateEmploymentDto } from './dto/update-employment.dto';\nimport { SearchEmploymentDto } from './dto/search-employment.dto';\nimport { ApplicationEmploymentDto } from './dto/application-employment.dto';\n\n@Controller('employment')\nexport class EmploymentController {\n  constructor(private readonly employmentService: EmploymentService) {}\n\n  @Post()\n  create(@Body() dto: CreateEmploymentDto) {\n    return this.employmentService.create(dto);\n  }\n\n  @Post('application')\n  application(@Body() dto: ApplicationEmploymentDto) {\n    return this.employmentService.application(dto);\n  }\n\n  @Get()\n  findAll() {\n    return this.employmentService.findAll();\n  }\n\n  @Get('search')\n  seach(@Query() dto: SearchEmploymentDto) {\n    return this.employmentService.search(dto);\n  }\n\n  @Get(':id')\n  findOne(@Param('id', ParseUUIDPipe) id: string) {\n    return this.employmentService.findOne({ id });\n  }\n\n  @Get('applicants/:id')\n  findApplicants(@Param('id', ParseUUIDPipe) id: string) {\n    return this.employmentService.findApplicants(id);\n  }\n\n  @Delete(':id')\n  remove(@Param('id', ParseUUIDPipe) id: string) {\n    return this.employmentService.remove({ id });\n  }\n\n  @Put(':id')\n  update(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() dto: UpdateEmploymentDto,\n  ) {\n    return this.employmentService.update(id, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmploymentModule.html":{"url":"modules/EmploymentModule.html","title":"module - EmploymentModule","body":"\n                   \n\n\n\n\n    Modules\n    EmploymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmploymentModule\n\n\n\ncluster_EmploymentModule_imports\n\n\n\ncluster_EmploymentModule_exports\n\n\n\ncluster_EmploymentModule_providers\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nEmploymentModule\n\nEmploymentModule\n\nEmploymentModule -->\n\nCompanyModule->EmploymentModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nEmploymentModule -->\n\nUserModule->EmploymentModule\n\n\n\n\n\nEmploymentService \n\nEmploymentService \n\nEmploymentService  -->\n\nEmploymentModule->EmploymentService \n\n\n\n\n\nEmploymentService\n\nEmploymentService\n\nEmploymentModule -->\n\nEmploymentService->EmploymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/employment/employment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmploymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmploymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CompanyModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmploymentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmploymentService } from './employment.service';\nimport { EmploymentController } from './employment.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Employment } from './entities/employment.entity';\nimport { CompanyModule } from 'src/company/company.module';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Employment]), CompanyModule, UserModule],\n  controllers: [EmploymentController],\n  providers: [EmploymentService],\n  exports: [EmploymentService],\n})\nexport class EmploymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmploymentService.html":{"url":"injectables/EmploymentService.html","title":"injectable - EmploymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmploymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employment/employment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                application\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findApplicants\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                search\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employmentRepository: Repository, companyService: CompanyService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/employment/employment.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employmentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyService\n                                                  \n                                                        \n                                                                        CompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        application\n                        \n                    \n                \n            \n            \n                \n                    \n                    application(dto: ApplicationEmploymentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/employment/employment.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ApplicationEmploymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateEmploymentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/employment/employment.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateEmploymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/employment/employment.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findApplicants\n                        \n                    \n                \n            \n            \n                \n                    \n                    findApplicants(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/employment/employment.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(options: FindOptionsWhere)\n                \n            \n\n\n            \n                \n                    Defined in src/employment/employment.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindOptionsWhere\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(options: FindOptionsWhere)\n                \n            \n\n\n            \n                \n                    Defined in src/employment/employment.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindOptionsWhere\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                    \n                    search(dto: SearchEmploymentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/employment/employment.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                SearchEmploymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateEmploymentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/employment/employment.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateEmploymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateEmploymentDto } from './dto/create-employment.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Employment } from './entities/employment.entity';\nimport { FindOptionsWhere, Like, MoreThan, Repository } from 'typeorm';\nimport { CompanyService } from 'src/company/company.service';\nimport { UpdateEmploymentDto } from './dto/update-employment.dto';\nimport { SearchEmploymentDto } from './dto/search-employment.dto';\nimport { UserService } from 'src/user/user.service';\nimport { ApplicationEmploymentDto } from './dto/application-employment.dto';\n\n@Injectable()\nexport class EmploymentService {\n  constructor(\n    @InjectRepository(Employment)\n    private employmentRepository: Repository,\n    private readonly companyService: CompanyService,\n    private readonly userService: UserService,\n  ) {}\n\n  async create(dto: CreateEmploymentDto) {\n    const company = await this.companyService.findOne({ id: dto.company_id });\n\n    const newEmployment = this.employmentRepository.create({\n      company,\n      ...dto.objectification(),\n    });\n\n    await this.employmentRepository.save(newEmployment);\n    return newEmployment;\n  }\n\n  async findAll() {\n    return await this.employmentRepository.find({\n      select: {\n        id: true,\n        position: true,\n        reward: true,\n        requiredSkill: true,\n        company: {\n          name: true,\n          nation: true,\n          location: true,\n        },\n      },\n      relations: { company: true },\n      order: { createdAt: 'DESC' },\n    });\n  }\n\n  async findOne(options: FindOptionsWhere) {\n    const employment = await this.employmentRepository.findOne({\n      select: {\n        id: true,\n        position: true,\n        reward: true,\n        requiredSkill: true,\n        summary: true,\n        company: {\n          name: true,\n          nation: true,\n          location: true,\n          employments: {\n            id: true,\n          },\n        },\n      },\n      where: {\n        id: options.id,\n        company: { employments: true },\n      },\n      relations: {\n        company: { employments: true },\n      },\n    });\n\n    if (employment) {\n      const selfIndex = employment.company.employments.findIndex(\n        (employment) => employment.id == options.id,\n      );\n\n      employment.company.employments.splice(selfIndex, selfIndex + 1);\n\n      return employment;\n    }\n\n    throw new BadRequestException('잘못된 채용 공고 ID 입니다.');\n  }\n\n  async remove(options: FindOptionsWhere) {\n    const employment = await this.findOne(options);\n    await this.employmentRepository.remove(employment);\n    return employment;\n  }\n\n  async update(id: string, dto: UpdateEmploymentDto) {\n    await this.employmentRepository.update(id, {\n      requiredSkill: dto.required_skill,\n      position: dto.position,\n      reward: dto.reward,\n      summary: dto.summary,\n    });\n\n    return await this.findOne({ id });\n  }\n\n  async search(dto: SearchEmploymentDto) {\n    const query = dto.objectification();\n\n    const employments = await this.employmentRepository.find({\n      select: {\n        id: true,\n        position: true,\n        reward: true,\n        summary: true,\n        requiredSkill: true,\n        company: {\n          name: true,\n          nation: true,\n          location: true,\n        },\n        createdAt: true,\n        updatedAt: true,\n      },\n      where: {\n        position: query.position ? Like(`%${query.position}%`) : undefined,\n        reward: query.reward ? MoreThan(query.reward) : undefined,\n        requiredSkill: query.requiredSkill\n          ? Like(`%${query.requiredSkill}%`)\n          : undefined,\n        id: query.id ? query.id : undefined,\n        summary: query.summary ? Like(`%${query.summary}%`) : undefined,\n      },\n      relations: {\n        company: true,\n      },\n      order: {\n        createdAt: 'DESC',\n      },\n    });\n\n    if (employments.length > 0) return employments;\n\n    throw new NotFoundException('해당 조건의 채용 공고가 존재하지 않습니다.');\n  }\n\n  async application(dto: ApplicationEmploymentDto) {\n    const { employmentId, userId } = dto.objectification();\n\n    const employment = await this.employmentRepository.findOne({\n      where: { id: employmentId },\n      relations: {\n        applicants: true,\n      },\n    });\n\n    if (employment) {\n      const user = await this.userService.findOne({ id: userId });\n\n      for (const applicant of employment.applicants) {\n        if (applicant.id == user.id) {\n          throw new BadRequestException('이미 지원한 채용 공고입니다.');\n        } else {\n          employment.applicants.push(user);\n\n          await this.employmentRepository.save(employment);\n\n          employment.applicants = [];\n          employment.applicants.push(user);\n\n          return employment;\n        }\n      }\n    }\n\n    throw new BadRequestException('잘못된 채용 공고 ID 입니다.');\n  }\n\n  async findApplicants(id: string) {\n    return await this.employmentRepository.findOne({\n      where: { id },\n      relations: {\n        applicants: true,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchEmploymentDto.html":{"url":"classes/SearchEmploymentDto.html","title":"class - SearchEmploymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchEmploymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employment/dto/search-employment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                position\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                required_skill\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                reward\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                summary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                objectification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsNotBlank()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/search-employment.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsNotBlank()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/search-employment.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        required_skill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsNotBlank()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/search-employment.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        reward\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsOptional()@IsNotBlank()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/search-employment.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        summary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsNotBlank()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employment/dto/search-employment.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        objectification\n                        \n                    \n                \n            \n            \n                \nobjectification()\n                \n            \n\n\n            \n                \n                    Defined in src/employment/dto/search-employment.dto.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { id: string; position: string; reward: number; summary: string; requiredSkill: string; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsOptional, IsString, IsUUID } from 'class-validator';\nimport { IsNotBlank } from 'src/common/IsNotBlank.decorator';\n\nexport class SearchEmploymentDto {\n  @IsString()\n  @IsOptional()\n  @IsNotBlank()\n  @IsUUID()\n  id: string;\n\n  @IsString()\n  @IsOptional()\n  @IsNotBlank()\n  position?: string;\n\n  @IsAlphanumeric()\n  @IsOptional()\n  @IsNotBlank()\n  reward?: number;\n\n  @IsString()\n  @IsOptional()\n  @IsNotBlank()\n  summary?: string;\n\n  @IsString()\n  @IsOptional()\n  @IsNotBlank()\n  required_skill?: string;\n\n  objectification() {\n    return {\n      id: this?.id,\n      position: this?.position,\n      reward: this?.reward,\n      summary: this?.summary,\n      requiredSkill: this?.required_skill,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/dto/update-company.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmploymentDto.html":{"url":"classes/UpdateEmploymentDto.html","title":"class - UpdateEmploymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmploymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employment/dto/update-employment.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/mapped-types';\nimport { CreateEmploymentDto } from './create-employment.dto';\n\nexport class UpdateEmploymentDto extends OmitType(CreateEmploymentDto, [\n  'company_id',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                applications\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        applications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Employment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, employment => employment.applicants)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from 'src/common/BaseEntity';\nimport { Employment } from 'src/employment/entities/employment.entity';\nimport { Column, Entity, ManyToMany } from 'typeorm';\n\n@Entity({ name: 'users' })\nexport class User extends BaseEntity {\n  @Column()\n  name: string;\n\n  @ManyToMany(() => Employment, (employment) => employment.applicants)\n  applications: Employment[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  ParseUUIDPipe,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  create(@Body() dto: CreateUserDto) {\n    return this.userService.create(dto);\n  }\n\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id', ParseUUIDPipe) id: string) {\n    return this.userService.findOne({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(options: FindOptionsWhere)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindOptionsWhere\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(options: FindOptionsWhere)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindOptionsWhere\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { FindOptionsWhere, Repository } from 'typeorm';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n  ) {}\n\n  async create(dto: CreateUserDto) {\n    const newUser = this.userRepository.create(dto);\n\n    await this.userRepository.save(newUser);\n\n    return newUser;\n  }\n\n  async findAll() {\n    return await this.userRepository.find();\n  }\n\n  async findOne(options: FindOptionsWhere) {\n    const user = await this.userRepository.findOneBy(options);\n    if (user) return user;\n\n    throw new BadRequestException('잘못된 사용자 ID 입니다.');\n  }\n\n  async remove(options: FindOptionsWhere) {\n    const user = await this.findOne(options);\n    await this.userRepository.remove(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/BaseEntity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/IsNotBlank.decorator.ts\n            \n            function\n            IsNotBlank\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/company/company.controller.ts\n            \n            controller\n            CompanyController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/company/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/company/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/company/entities/company.entity.ts\n            \n            entity\n            Company\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/validationSchema.ts\n            \n            variable\n            validationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employment/dto/application-employment.dto.ts\n            \n            class\n            ApplicationEmploymentDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/employment/dto/create-employment.dto.ts\n            \n            class\n            CreateEmploymentDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/employment/dto/search-employment.dto.ts\n            \n            class\n            SearchEmploymentDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/employment/dto/update-employment.dto.ts\n            \n            class\n            UpdateEmploymentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employment/employment.controller.ts\n            \n            controller\n            EmploymentController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/employment/employment.service.ts\n            \n            injectable\n            EmploymentService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/employment/entities/employment.entity.ts\n            \n            entity\n            Employment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            joi : ^17.11.0\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IsNotBlank   (src/.../IsNotBlank.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/IsNotBlank.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsNotBlank\n                        \n                    \n                \n            \n            \n                \nIsNotBlank(property?: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWanted Pre-Onboarding Backend Project\n작동법\n이 프로젝트를 실행하기 위해서는 로컬 환경에 Docker와 Docker-compose가 설치되어 있어야 합니다.\n서버 실행시\n\n프로젝트 루트 경로의 example.env 파일을 참조하여 .env 파일을 생성합니다.\nnpm run docker:up 명령어로 PostgreSQL을 실행합니다.\nnpm run start:dev 명령어로 서버를 실행합니다.\n\n서버 종료시\n\n서버를 종료합니다.\nnpm run docker:down 명령어로 PostgreSQL을 종료합니다.\n\n사용 기술\n\nNest.js\nTypeORM\nPostgreSQL\nDocker, Docker-compose\n\n요구 사항\n회사\n\n \n회사는 채용 공고를 등록할 수 있어야 합니다.\n\n \n회사는 채용 공고를 수정할 수 있어야 합니다. (단 회사 ID 제외)\n\n \n회사는 채용 공고를 삭제할 수 있어야 합니다.\n\n\n사용자\n\n \n사용자는 채용 공고 목록을 확인할 수 있어야 합니다.\n\n \n사용자는 채용 공고를 검색할 수 있어야 합니다. (가산점)\n\n \n사용자는 채용상세 페이지를 확인할 수 있어야 합니다.\n\n 해당 회사가 올린 다른 채용 공고 확인 (가산점)\n\n\n \n사용자는 채용공고에 지원할 수 있어야 합니다. (가산점)\n\n\n커밋 컨벤션\n태그 목록\n\nFeat : 새로운 기능을 추가하는 경우\nFix : 버그를 고친경우\nDocs : 문서를 수정한 경우\nStyle : 코드 포맷 변경, 세미콜론 누락, 코드 수정이 없는경우\nRefactor : 코드 리펙토링\nChore : 빌드 업무 수정, 패키지 매니저 수정\nRename : 파일명(or 폴더명) 을 수정한 경우\nRemove : 코드(파일) 의 삭제가 있을 때.\nAdd : 코드나 테스트, 예제, 문서등의 추가 생성이 있는경우\nMove : 코드의 이동이 있는경우\nComment : 필요한 주석 추가 및 변경\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmploymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_EmploymentModule\n\n\n\ncluster_EmploymentModule_exports\n\n\n\ncluster_EmploymentModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nEmploymentModule\n\nEmploymentModule\n\nEmploymentModule -->\n\nCompanyModule->EmploymentModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nCompanyService \n\nCompanyService \n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nEmploymentModule->AppModule\n\n\n\n\n\nEmploymentService \n\nEmploymentService \n\nEmploymentService  -->\n\nEmploymentModule->EmploymentService \n\n\n\n\n\nUserModule\n\nUserModule\n\nEmploymentModule -->\n\nUserModule->EmploymentModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nEmploymentService\n\nEmploymentService\n\nEmploymentModule -->\n\nEmploymentService->EmploymentModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            validationSchema   (src/.../validationSchema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configs/validationSchema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  // SERVER\n  SERVER_PORT: Joi.number().required(),\n\n  // DATABASE\n  POSTGRES_USER: Joi.string().required(),\n  POSTGRES_PASSWORD: Joi.string().required(),\n  POSTGRES_DB: Joi.string().required(),\n  POSTGRES_PORT: Joi.number().required(),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
